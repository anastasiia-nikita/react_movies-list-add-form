{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","newMovie","useState","newTitle","setNewTitle","newDescription","setNewDescription","newImgUrl","setNewImgUrl","newImdbUrl","setNewImdbUrl","newImdbId","setImdbId","newImgUrlError","setNewImgUrlError","newImdbUrlError","setNewImdbUrlError","newTitledError","setNewTitleError","newImdbIdError","setNewImdbIdError","regex","onSubmit","event","preventDefault","test","Alert","severity","type","classnames","placeholder","value","onChange","target","length","disabled","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82fc4582.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Alert } from '@mui/material';\n// import { Component } from 'react';\n\ntype Props = {\n  newMovie:(movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ newMovie }) => {\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [newImgUrl, setNewImgUrl] = useState('');\n  const [newImdbUrl, setNewImdbUrl] = useState('');\n  const [newImdbId, setImdbId] = useState('');\n\n  const [newImgUrlError, setNewImgUrlError] = useState(false);\n  const [newImdbUrlError, setNewImdbUrlError] = useState(false);\n  const [newTitledError, setNewTitleError] = useState(false);\n  const [newImdbIdError, setNewImdbIdError] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const handleEvent = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const movie = {\n      title: newTitle,\n      description: newDescription,\n      imgUrl: newImgUrl,\n      imdbUrl: newImdbUrl,\n      imdbId: newImdbId,\n    };\n\n    setNewTitleError(!newTitle);\n    setNewImdbIdError(!newImdbId);\n    setNewImgUrlError(!regex.test(newImgUrl));\n    setNewImdbUrlError(!regex.test(newImdbUrl));\n\n    if (newTitle && newImdbId && regex.test(newImgUrl)\n      && regex.test(newImdbUrl)) {\n      newMovie(movie);\n\n      setNewTitle('');\n      setNewDescription('');\n      setNewImgUrl('');\n      setNewImdbUrl('');\n      setImdbId('');\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleEvent}\n    >\n      <p className=\"title is-2 has-text-link\">Add a movie</p>\n\n      {newTitledError && (\n        <Alert severity=\"error\">\n          Please enter a title\n        </Alert>\n      )}\n\n      <input\n        type=\"text\"\n        className={classnames(\n          'input', 'mb-4', 'is-link', {\n            'is-danger': newTitledError,\n          },\n        )}\n        placeholder=\"Add a title\"\n        value={newTitle}\n        onChange={(event) => {\n          const { value } = event.target;\n\n          if (value.length > 0) {\n            setNewTitle(value);\n            setNewTitleError(false);\n          } else {\n            setNewTitle('');\n            setNewTitleError(true);\n          }\n        }}\n      />\n\n      <input\n        type=\"text\"\n        className=\"input mb-4 is-link\"\n        placeholder=\"Add description\"\n        value={newDescription}\n        onChange={(event) => {\n          setNewDescription(event.target.value);\n        }}\n      />\n\n      {newImgUrlError && (\n        <Alert severity=\"error\">\n          Please enter a valid imgUrl\n        </Alert>\n      )}\n\n      <input\n        type=\"text\"\n        className={classnames(\n          'input', 'mb-4', 'is-link', {\n            'is-danger': newImgUrlError,\n          },\n        )}\n        placeholder=\"Add imgUrl\"\n        value={newImgUrl}\n        onChange={(event) => {\n          const { value } = event.target;\n\n          setNewImgUrl(value);\n\n          if (!value || !regex.test(value)) {\n            setNewImgUrlError(true);\n          } else {\n            setNewImgUrlError(false);\n          }\n        }}\n      />\n\n      {newImdbUrlError && (\n        <Alert severity=\"error\">\n          Please enter a valid imdbUrl\n        </Alert>\n      )}\n\n      <input\n        type=\"text\"\n        className={classnames(\n          'input', 'mb-4', 'is-link', {\n            'is-danger': newImdbUrlError,\n          },\n        )}\n        placeholder=\"Add imdbUrl\"\n        value={newImdbUrl}\n        onChange={(event) => {\n          const { value } = event.target;\n\n          setNewImdbUrl(value);\n\n          if (!value || !regex.test(value)) {\n            setNewImdbUrlError(true);\n          } else {\n            setNewImdbUrlError(false);\n          }\n        }}\n      />\n\n      {newImdbIdError && (\n        <Alert severity=\"error\">\n          Please enter a imdbId\n        </Alert>\n      )}\n\n      <input\n        type=\"text\"\n        className={classnames(\n          'input', 'mb-4', 'is-link', {\n            'is-danger': newImdbIdError,\n          },\n        )}\n        placeholder=\"Add imdbId\"\n        value={newImdbId}\n        onChange={(event) => {\n          const { value } = event.target;\n\n          if (value.length > 0) {\n            setImdbId(value);\n            setNewImdbIdError(false);\n          } else {\n            setImdbId('');\n            setNewImdbIdError(true);\n          }\n        }}\n      />\n\n      <button\n        type=\"submit\"\n        disabled={!newTitle || !newImdbId\n          || !regex.test(newImgUrl)\n          || !regex.test(newImdbUrl)}\n        className=\"button is-link\"\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(currentMovies => (\n      [...currentMovies, movie]\n    ));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie newMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}